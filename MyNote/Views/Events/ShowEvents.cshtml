@model IEnumerable<MyNote.Models.ShowEventViewModel>

@{
    ViewBag.Title = "ShowEvents";
}
<div class="row show-event-conainer">
    <div class="row">
        <p>
            @Html.ActionLink("Dodaj wspomnienie", "CreateEvent", null, new { @class = "btn btn-defaul event-addEvent-btn" })
        </p>
    </div>
    <div class="row events-container">
        @foreach (var ShowEventViewModel in Model)
        {
            <div class="col-md-offset-4 col-md-4 event-container">
                <div class="event-title">
                    @Html.DisplayFor(modelItem => ShowEventViewModel.Title)
                </div>
                <div class="event-text">
                    @Html.DisplayFor(modelItem => ShowEventViewModel.Text)
                </div>
                <div  class="event-photos">
                    @foreach (var photo in ShowEventViewModel.Photos)
                    {
                        <img src="/Photos/Get/@(photo.Id)">
                    }
                </div>
                <div class="row event-footer">
                    <div class="col-md-offset-4 col-md-4 event-icons">
                        @Html.ActionLink(" ", "EditEvent", new { id = ShowEventViewModel.Id }, new { @class = "glyphicon glyphicon-edit " }) |
                        @Html.ActionLink(" ", "DeleteEvent", new { id = ShowEventViewModel.Id }, new { @id = "remove -btn",
                       onclick = "return DeleteConfirm()", @class = "glyphicon glyphicon-remove" })
                    </div>
                    <div class="col-md-4 event-date">
                        @Html.DisplayFor(modelItem => ShowEventViewModel.Date)
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts{
    <script>
            function DeleteConfirm() {
                var result = confirm("Na pewno chcesz usunąć wspomnienie?");
                return result;
            };
        
    </script>
 }